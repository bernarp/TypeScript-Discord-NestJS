/**
 * @file IPermissionGroup.ts
 * @description Определяет структуру для группы прав доступа в рамках одной гильдии.
 */
export interface IPermissionGroup {
    /**
     * @property {string} name
     * @description Человекочитаемое имя группы, которое будет отображаться администраторам.
     * Например: "Модераторы", "VIP Пользователи".
     */
    name: string;

    /**
     * @property {string[]} roleIds
     * @description Массив идентификаторов ролей Discord (Role ID), которые входят в эту группу.
     * Пользователь, обладающий хотя бы одной из этих ролей, считается участником группы.
     */
    roleIds: string[];

    /**
     * @property {string[]} permissions
     * @description Массив строк-разрешений (permission nodes), которые предоставлены этой группе.
     * Рекомендуется использовать формат 'модуль.действие', например: 'ticket.create', 'config.view'.
     * Поддерживается wildcard-разрешение: 'ticket.*' предоставляет все права в модуле ticket.
     */
    permissions: string[];

    /**
     * @property {string[]} inherits
     * @description Массив системных имен других групп, от которых эта группа наследует все разрешения.
     * Это позволяет создавать иерархии прав (например, "Администраторы" наследуют права "Модераторов").
     * TODO: Сервис, управляющий правами, должен будет валидировать эти "мягкие" ссылки, чтобы избежать циклических зависимостей или ссылок на несуществующие группы.
     */
    inherits: string[];
}
