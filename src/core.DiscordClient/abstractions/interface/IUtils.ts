/**
 * @interface IUtils
 * @description Базовый интерфейс-маркер для всех вспомогательных классов (утилит).
 * Этот интерфейс не определяет никаких методов и служит для того, чтобы
 * семантически обозначить класс как "утилиту" в системе.
 * Это может быть полезно для общих механизмов, например, для логирования или
 * применения декораторов ко всем утилитам.
 *
 * ВНИМАНИЕ: Этот подход следует использовать с осторожностью. Классы "Utils"
 * могут нарушать Принцип Единой Ответственности (SRP), превращаясь в хранилище
 * для несвязанных методов.
 *
 * РЕКОМЕНДАЦИЯ: Вместо одного общего класса утилит, создавайте маленькие,
 * сфокусированные классы с четкой зоной ответственности. Например:
 * - `class EmbedFactory implements IEmbedFactory { ... }`
 * - `class ResponseFormatter implements IResponseFormatter { ... }`
 * Каждый из этих интерфейсов (`IEmbedFactory`, `IResponseFormatter`) будет
 * описывать свой собственный, конкретный контракт.
 */
export interface IUtils {
    // Этот интерфейс намеренно оставлен пустым.
    // Он является "маркером", а не контрактом с конкретными методами.
}
