/**
 * @file InteractionLoggerCreateMessageUser.ts
 * @description –°–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –µ–≥–æ.
 * –í–ï–†–°–ò–Ø 2.0: –ù–∞—Å–ª–µ–¥—É–µ—Ç AbstractMessageLogger.
 */
import { Injectable } from "@nestjs/common";
import { OnEvent } from "@nestjs/event-emitter";
import { Message, EmbedBuilder } from "discord.js";
import { AppEvents } from "@/event.EventBus/app.events";
import { MessageCreateEvent } from "@/event.EventBus/message-create.event";
import { IInteractionLoggerChannel } from "../abstractions/IInteractionLoggerChannel";

@Injectable()
export class InteractionLoggerCreateMessageUser extends IInteractionLoggerChannel {
    /**
     * @method onMessageCreated
     * @description –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
     * @param {MessageCreateEvent} payload - –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.
     */
    @OnEvent(AppEvents.MESSAGE_CREATED)
    public async onMessageCreated(payload: MessageCreateEvent): Promise<void> {
        const { message } = payload;

        if (!this._isLoggable(message)) {
            return;
        }

        const logChannelId = await this._guildConfig.get(
            message.guildId!,
            "logChannelMessageSendId"
        );
        if (!logChannelId) {
            return;
        }

        const logEmbed = this._createLogEmbed(message);
        await this._sendLog(logChannelId, message.guildId!, logEmbed);
    }

    /**
     * @private
     * @method _createLogEmbed
     * @description –°–æ–∑–¥–∞–µ—Ç –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (embed) –¥–ª—è –ª–æ–≥–∞.
     * @param {Message} message - –°–æ–∑–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
     * @returns {EmbedBuilder} –ì–æ—Ç–æ–≤—ã–π embed.
     */
    private _createLogEmbed(message: Message): EmbedBuilder {
        const author = message.author;
        const content =
            message.content?.substring(0, 1000) ||
            "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (embed –∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ).";

        return this._embedFactory.createInfoEmbed({
            title: "–õ–æ–≥: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è",
            description: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${author.tag}** –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.`,
            fields: [
                {
                    name: "üë§ –ê–≤—Ç–æ—Ä",
                    value: `**Tag:** ${author.tag}\n**ID:** \`${author.id}\``,
                    inline: true,
                },
                {
                    name: "üìç –ö–∞–Ω–∞–ª",
                    value: message.channel.toString(),
                    inline: true,
                },
                {
                    name: "üìú –°–æ–¥–µ—Ä–∂–∏–º–æ–µ",
                    value: `\`\`\`${content}\`\`\``,
                    inline: false,
                },
            ],
            context: { user: author, guild: message.guild! },
        });
    }
}
